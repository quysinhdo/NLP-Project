import streamlit as st
import pandas as pd
import requests
from bs4 import BeautifulSoup
from utils.helpers import display_title_icon

def scrape_movie_data(url):
    try:
        # G·ª≠i y√™u c·∫ßu HTTP v·ªõi header gi·∫£ l·∫≠p tr√¨nh duy·ªát
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        }
        response = requests.get(url, headers=headers)
        response.raise_for_status()
        
        # Ph√¢n t√≠ch HTML
        soup = BeautifulSoup(response.content, 'html.parser')
        movie_items = soup.find_all('div', class_='rounded-lg border bg-card text-card-foreground shadow-sm overflow-hidden border-none')
        
        movies_data = []
        for item in movie_items:
            movie = {}
            
            # T√™n phim
            title_tag = item.find('h3').find('a', class_='line-clamp-1 text-left text-sm font-normal text-foreground hover:text-primary')
            movie['title'] = title_tag.get_text(strip=True) if title_tag else 'N/A'
            
            # T√™n ti·∫øng Anh
            eng_title_tag = item.find('p', class_='text-muted-foreground mt-1 line-clamp-1 text-xs font-light')
            movie['english_title'] = eng_title_tag.get_text(strip=True) if eng_title_tag else 'N/A'
            
            # NƒÉm ph√°t h√†nh v√† s·ªë t·∫≠p
            info_div = item.find('div', class_='flex items-center gap-1.5 font-light')
            if info_div:
                spans = info_div.find_all('span', class_='inline-block text-xs text-muted-foreground')
                movie['year'] = spans[0].get_text(strip=True) if len(spans) > 0 else 'N/A'
                movie['episodes'] = spans[1].get_text(strip=True) if len(spans) > 1 else 'N/A'
            else:
                movie['year'] = 'N/A'
                movie['episodes'] = 'N/A'
            
            movies_data.append(movie)
        
        return movies_data
    
    except Exception as e:
        st.error(f"L·ªói khi c√†o d·ªØ li·ªáu: {str(e)}")
        return []

def main():
    display_title_icon("üì•", "Thu th·∫≠p D·ªØ li·ªáu")
    
    st.markdown("""
    ## C√¥ng c·ª• Thu th·∫≠p D·ªØ li·ªáu
    
    Nh·∫≠p URL trang web ƒë·ªÉ c√†o th√¥ng tin phim (t√™n phim, t√™n ti·∫øng Anh, nƒÉm ph√°t h√†nh, s·ªë t·∫≠p).
    """)
    
    # Nh·∫≠p URL
    st.subheader("Nh·∫≠p URL trang web")
    default_url = "https://phimmoichillzz.com/"
    url = st.text_input("URL:", value=default_url)
    
    if st.button("üîç C√†o d·ªØ li·ªáu"):
        with st.spinner("ƒêang c√†o d·ªØ li·ªáu..."):
            movies_data = scrape_movie_data(url)
        
        if movies_data:
            # Chuy·ªÉn th√†nh DataFrame
            df = pd.DataFrame(movies_data)
            
            # Hi·ªÉn th·ªã d·ªØ li·ªáu
            st.subheader("D·ªØ li·ªáu phim ƒë√£ c√†o")
            st.dataframe(df, use_container_width=True)
            
            # T√πy ch·ªçn t·∫£i xu·ªëng CSV
            csv = df.to_csv(index=False)
            st.download_button(
                label="T·∫£i xu·ªëng d·ªØ li·ªáu (CSV)",
                data=csv,
                file_name="movies_data.csv",
                mime="text/csv"
            )
            
            # L∆∞u v√†o session state
            st.session_state.movies_data = df
            
            st.success(f"ƒê√£ c√†o ƒë∆∞·ª£c {len(movies_data)} m·ª•c phim!")
        else:
            st.warning("Kh√¥ng c√†o ƒë∆∞·ª£c d·ªØ li·ªáu. Vui l√≤ng ki·ªÉm tra URL ho·∫∑c k·∫øt n·ªëi.")

if __name__ == "__main__":
    main()